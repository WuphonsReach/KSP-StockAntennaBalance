CONTRACT_TYPE
{
    name = SAB_Homeworld_SurfaceRelayD_Tier0

    // Reference to a CONTRACT_GROUP node which supplies additional rules
    // for limiting the number of contracts within a given group.
    group = StockAntennaBalance

    title = Place a @StockAntennaBalance:relayPowerTier0 M power relay on the surface near the Desert Launch Site.
    synopsis = We want you to build a new relay station with at least @StockAntennaBalance:relayPowerTier0 M power on the surface of @StockAntennaBalance:homeworld near Desert Launch Site.
    completedMessage = Success! The relay station is up and running on @StockAntennaBalance:homeworld.
    notes = Please note that this must be a new relay station, constructed after the contract is accepted.

    // use "description" or "topic/subject/motiviation"
    //description = Put XYZ into Kolniya
    topic = relay satellite
    subject = generic
    motivation = generic

    // cancellable = true
    // declinable = true
    minExpiry = 45.0
    maxExpiry = 90.0
    deadline = Random(450,650) // days
    prestige = Trivial

    maxCompletions = 1
    maxSimultaneous = 1

    rewardScience = 0.0
    failureReputation = Random(4,6)
    rewardReputation = Random(2,3)
    failureFunds = Random(25000,30000)
    advanceFunds = Random(20000,25000)
    rewardFunds = Random(80000,100000)

    targetBody = @StockAntennaBalance:homeworld

    PARAMETER
    {
        name = MyVesselParameterGroup
        type = VesselParameterGroup
        title = Place into a stable situation for @duration

        duration = 30d

        dissassociateVesselsOnContractCompletion = true

        //TODO: Limit this contract to Kerbin

        PARAMETER
        {
            name = NewVessel
            type = NewVessel
            // Default:   Launch a new vessel
            title = Create a new relay station
        }

        PARAMETER
        {
            name = HasResourceCapacityEC
            type = HasResourceCapacity

            // Default:   Resource: <resource>: <quantity_description>
            title = Have at least @minQuantity electric charge (EC) storage

            resource = ElectricCharge
            minQuantity = 50.0
            // maxQuantity = 1000.0
        }

        PARAMETER
        {
            name = VesselIsType
            type = VesselIsType
            vesselType = Relay
        }

        PARAMETER
        {
            name = PartValidationCommand
            type = PartValidation
            partModule = ModuleCommand    
        }

        PARAMETER
        {
            name = AntennaRelayPower
            type = HasAntenna
            title = Have at least @StockAntennaBalance:relayPowerTier0 M (combined) relay antenna power
            antennaType = RELAY
            minAntennaPower = @StockAntennaBalance:relayPowerTier0 * 1000000
            //maxAntennaPower = 
        }

        PARAMETER
        {
            name = HasResourceEC
            type = HasResource

            // Default:   Resource: <resource>: <quantity_description>
            title = Maintain at least @minQuantity electric charge

            resource = ElectricCharge
            minQuantity = @../HasResourceCapacityEC/minQuantity * 0.1
            // maxQuantity = 1000
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState
            title = Must not be under acceleration and landed
            maxAcceleration = 0.5
            situation = LANDED
        }

        PARAMETER
        {
            name = VisitWaypoint
            type = VisitWaypoint

            index = 0 // zero-based index into the WaypointGenerator array

            // Horizontal distance tolerance to be considered at the waypoint.
            horizontalDistance = 50.0
            distance = 50.0

            // Whether the waypoint should get automatically hidden after completing
            // the contract objective.
            hideOnCompletion = true

            // Whether to show the "Entering/Leaving $waypointName." messages when a player gets within the
            // distance tolerance of the waypoint.
            showMessages = true
        }
    }

    BEHAVIOUR
    {
        name = TrackCompletions
        type = Expression
        CONTRACT_COMPLETED_SUCCESS
        {
            // Multiple expressions may be supplied in one node
            CCSABHomeSurfaceRelay = $CCSABHomeSurfaceRelay + 1
        }
    }

    BEHAVIOUR
    {
        name = WaypointGenerator
        type = WaypointGenerator

        // Use this to generate a waypoint with fixed coordinates
        WAYPOINT
        {
            name = Desert Launch Site North
            // The icon to use when displaying the waypoint.  If the path
            // is not specified, the Squad/Contracts/Icons directory is
            // assumed.  Otherwise, the path must be from GameData/
            icon = dish
            altitude = 0.0
            latitude = -5.7
            longitude = -144.1
        }
    }
}